<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>مشكلة الحصان باستخدام Backtracking</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(to right, #141e30, #243b55);
            color: white;
            text-align: center;
        }

        .square {
            display: inline-block;
            width: 40px;
            height: 40px;
            margin-right: 5px;
            background-color: #4caf50;
            color: white;
            text-align: center;
            vertical-align: bottom;
            transition: background-color 0.5s ease-in-out;
        }

        #board {
            display: flex;
            flex-wrap: wrap;
            width: 340px;
            margin: 20px auto;
        }

        button {
            background: #f39c12;
            color: white;
            border: none;
            padding: 10px 20px;
            margin: 10px;
            cursor: pointer;
            border-radius: 5px;
            transition: 0.3s;
        }

        button:hover {
            background: #e67e22;
        }

        input {
            padding: 8px;
            border-radius: 5px;
            border: none;
            text-align: center;
        }
    </style>
</head>
<body>
    <h2>مشكلة الحصان باستخدام Backtracking</h2>

    <label for="startRow">أدخل صف البداية:</label>
    <input type="number" id="startRow" required />
    <label for="startCol">أدخل عمود البداية:</label>
    <input type="number" id="startCol" required />
    <button onclick="solveKnightTour()">حل المشكلة</button>

    <h3>لوحة الحصان:</h3>
    <div id="board"></div>

    <script>
        async function solveKnightTour() {
            const startRow = document.getElementById("startRow").value;
            const startCol = document.getElementById("startCol").value;

            const response = await fetch('/api/knighttour/solve', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ "startRow": parseInt(startRow), "startCol": parseInt(startCol) })
            });

            const data = await response.json();
            if (data) {
                drawBoard(data);
            } else {
                alert("لا يوجد حل للمشكلة");
            }
        }

        function drawBoard(board) {
            const boardDiv = document.getElementById("board");
            boardDiv.innerHTML = "";

            board.forEach((row, rowIndex) => {
                row.forEach((value, colIndex) => {
                    const square = document.createElement("div");
                    square.classList.add("square");

                    if (value !== -1) {
                        square.textContent = value;
                        square.style.backgroundColor = "#3498db";
                    } else {
                        square.style.backgroundColor = "#2c3e50";
                    }

                    boardDiv.appendChild(square);
                });
            });
        }
    </script>
</body>
</html>
